import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import make_pipeline
from sklearn.linear_model import LogisticRegression , RidgeClassifier
from sklearn.ensemble import RandomForestClassifier , GradientBoostingClassifier
from sklearn.metrics import accuracy_score
import pickle

df = pd.read_csv('handmarks.csv')
x = df.iloc[: , 1:]
y = df.iloc[: , 0]
X_train , X_test , y_train , y_test = train_test_split(x , y , test_size = 0.2 , random_state=0)

pipelines = {
    'lr':make_pipeline(StandardScaler() , LogisticRegression()),
    'rc':make_pipeline(StandardScaler() , RidgeClassifier()),
    'rf':make_pipeline(StandardScaler() , RandomForestClassifier()),
    'gb':make_pipeline(StandardScaler() , GradientBoostingClassifier())
}

fit_models = {}
for algo , pipeline in pipelines.items():
    model = pipeline.fit(X_train , y_train)
    fit_models[algo] = model

for algo , model in fit_models.items():
    pred = model.predict(X_test)
    print(algo , accuracy_score(y_test , pred))

with open('Hand_test_new.pkl' , 'wb') as f:
    pickle.dump(fit_models['rf'], f)
